Basically processor ‡®¶‡®æ ‡®á‡®π‡©Ä ‡®ï‡©∞‡®Æ ‡®Ü ‡®ï‡®ø ‡®â‡®π Memory ‡®§‡©ã‡®Ç data ‡®ö‡©Å‡©±‡®ï‡®¶‡®æ ‡®π‡©à ‡®§‡©á ‡®â‡®∏ data ‡®§‡©á operation ‡®ï‡®∞‡®¶‡®æ ‡®ú‡©ã ‡®Æ‡©à‡®Ç ‡®â‡®∏ ‡®®‡©Ç‡©∞ ( processor ‡®®‡©Ç‡©∞ )‡®¶‡®∏‡®ø‡®Ü ‡®π‡©à‡•§

‡®á‡®∏ ‡®ï‡©∞‡®Æ ‡®®‡©Ç‡©∞ ‡®ï‡®∞‡®® ‡®≤‡®à ‡®Ü‡®™‡®£‡©á ‡®ï‡©ã‡®≤ ‡®ï‡®ø‡®π‡©ú‡©á ‡®ï‡®ø‡®π‡©ú‡©á Mechanism ‡®π‡©ã‡®£‡©á ‡®ö‡®æ‡®π‡©Ä‡®¶‡©á ‡®π‡©à‡•§

1Ô∏è‚É£ ‡®§‡®æ‡®Ç Processor ‡®π‡©à ‡®ú‡®ø‡®∏‡®¶‡©á ‡®Ö‡©∞‡®¶‡®∞ ‡®Ü‡®™‡®æ ‡®â‡®π
Process ‡®§‡®æ‡®Ç ‡®∞‡©±‡®ñ‡®ø‡®Ü ‡®π‡©Ä ‡®π‡©à ‡®ú‡®ø‡®∏ ‡®â‡©±‡®™‡®∞ ‡®Ü‡®™‡®æ ‡®â‡®π operation ‡®ï‡®∞‡®£‡®æ‡•§
2Ô∏è‚É£ ‡®Æ‡©à‡®®‡©Ç‡©∞ ‡®ï‡©ã‡®à ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®¶‡©á mechanism ‡®¶‡©Ä ‡®≤‡©ã‡©ú ‡®π‡©à ‡®ú‡®ø‡®∏ ‡®§‡©ã‡®Ç ‡®Æ‡©à‡®Ç memory ‡®®‡©Ç‡©∞ ‡®á‡®π ‡®¶‡©±‡®∏ ‡®∏‡®ï‡®æ ‡®µ‡©Ä ‡®Æ‡©à‡®Ç ‡®â‡®π data read ‡®ï‡®∞‡®®‡®æ‡•§
‡®á‡®∏ ‡®ó‡©±‡®≤ ‡®§‡©á ‡®ó‡©å‡®∞ ‡®ï‡®∞‡®® ‡®¶‡©Ä ‡®≤‡©ã‡©ú ‡®Ü ‡®µ‡©Ä ‡®Æ‡©à‡®Ç data read ‡®ï‡®∞‡®£‡®æ ‡®™‡®∞ ‡®ï‡®ø‡®π‡©ú‡®æ data read ‡®ï‡®∞‡®£‡®æ Memory ‡®µ‡®ø‡©±‡®ö ‡®§‡®æ ‡®¨‡®π‡©Å‡®§ data ‡®π‡©Å‡©∞‡®¶‡®æ ‡®Æ‡©à‡®®‡©Ç‡©∞ ‡®â‡®∏ ‡®ñ‡®æ‡®∏ data ‡®â‡©±‡®™‡®∞ point ‡®ï‡®∞‡®®‡®æ ‡®™‡®ä‡®ó‡®æ ‡®ú‡®ø‡®∏‡®®‡©Ç‡©∞ ‡®Æ‡©à‡®Ç read ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡®æ‡•§ ‡®â‡®π ‡®∏‡®ø‡®∞‡®´ ‡®á‡©±‡®ï ‡®π‡©Ä ‡®π‡©ã‡®è ‡®ó‡®æ 2 ‡®®‡®π‡©Ä ‡®π‡©ã ‡®∏‡®ï‡®¶‡©á ‡®ú‡®ø‡®∏ ‡®â‡©±‡®™‡®∞ ‡®Æ‡©à‡®®‡©Ç‡©∞ ‡®π‡©Å‡®£ interest ‡®π‡©à ‡•§ ‡®ú‡®¶‡©ã‡®Ç ‡®â‡®π data processor ‡®ï‡©ã‡®≤ ‡®Ü‡®ä‡®ó‡®æ ‡®ì‡®¶‡©ã‡®Ç ‡®â‡®∏ data ‡®â‡©±‡®™‡®∞ operation ‡®π‡©ã‡®è‡®ó‡®æ‡•§
3Ô∏è‚É£ Memory ‡®§‡©ã‡®Ç processor ‡®§‡©±‡®ï ‡®ï‡©ã‡®à ‡®á‡©±‡®ï ‡®∞‡®æ‡®∏‡®§‡®æ ‡®π‡©ã‡®£‡®æ ‡®ö‡®æ‡®π‡©Ä‡®¶‡®æ ‡®ú‡®ø‡®∏ ‡®§‡©ã‡®Ç data memory ‡®§‡©ã‡®Ç processor ‡®§‡©±‡®ï ‡®Ü ‡®∏‡®ï‡©á ‡®§‡©á data processor ‡®§‡©ã‡®Ç memory ‡®§‡©±‡®ï ‡®Ü ‡®∏‡®ï‡©á‡•§
 For example ‡®ú‡®ø‡®µ‡©á‡®Ç ‡®Ü‡®™‡®æ ‡®ï‡©ã‡®à letter ‡®≤‡®ø‡®ñ‡®¶‡©á ‡®Ü ‡®â‡®∏ letter ‡®§‡©á ‡®Ü‡®™‡®æ address ‡®≤‡®ø‡®ñ‡®¶‡©á ‡®Ü ‡®µ‡©Ä ‡®Ü‡®™‡®æ ‡®â‡®∏ letter ‡®®‡©Ç‡©∞ ‡®ï‡®ø‡©±‡®•‡©á deliver ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®Ü ‡®è‡®∏‡©á ‡®§‡®∞‡®æ‡®Ç processor ‡®µ‡®ø‡©±‡®ö ‡®á‡®π ‡®∏‡®æ‡®∞‡®æ mechanisn ‡®µ‡©Ä  memory ‡®®‡©Ç‡©∞ ‡®á‡®π ‡®¶‡©±‡®∏‡®£ ‡®¶‡®æ ‡®µ‡©Ä (memory ‡®µ‡®ø‡©±‡®ö ‡®â‡®π ) ‡®ï‡®ø‡®π‡©ú‡®æ data element ‡®Ü‡®™‡®æ read ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®Ü ‡®á‡®∏ ‡®®‡©Ç‡©∞ ‡®Ü‡®™‡®æ group ‡®ï‡®∞ ‡®¶‡®ø‡©∞‡®¶‡©á ‡®Ü ‡®§‡©á ‡®â‡®∏ ‡®®‡©Ç‡©∞ ‡®á‡©±‡®ï Bus ‡®¶‡®æ ‡®®‡®æ‡®Æ ‡®¶‡©á ‡®¶‡®ø‡©∞‡®¶‡©á ‡®Ü ‡®ú‡®ø‡®∏‡®¶‡©á ‡®µ‡®ø‡©±‡®ö grouping ‡®π‡©ã‡®à ‡®π‡©à signalsüö¶ ‡®¶‡©Ä ‡•§ ‡®∏‡®æ‡®∞‡©á signal üö¶‡®¶‡®æ function ‡®á‡©±‡®ï ‡®π‡©Ä ‡®π‡©à ‡®µ‡©Ä ‡®á‡®π‡®®‡®æ‡®Ç ‡®∏‡®æ‡®∞‡©á signals ‡®®‡©á memory nu identify ‡®ï‡®∞‡®æ‡®â‡®£‡®æ ‡®µ‡©Ä processor ‡®ï‡®ø‡®π‡©ú‡®æ data element ‡®§‡©á interested ‡®π‡©à ‡•§ ‡®á‡®∏ bus ‡®¶‡®æ ‡®®‡®æ‡®Æ ‡®π‡©à Address Bus ‡•§  ‡®§‡©á ‡®¶‡©Ç‡®ú‡©Ä bus ‡®π‡©à Data Bus ‡®á‡®∏ ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®µ‡©Ä signals ‡®¶‡©Ä grouping ‡®π‡©ã‡®à ‡®π‡©à ‡®ú‡®ø‡®®‡©ç‡®π‡®æ‡®Ç ‡®¶‡®æ function ‡®á‡©±‡®ï ‡®π‡©Ä ‡®π‡©à ‡®§‡©á ‡®â‡®π function ‡®π‡©à data ‡®®‡©Ç‡©∞ processor ‡®§‡©ã‡®Ç memory ‡®§‡©±‡®ï ‡®≤‡©á‡®ï‡©á ‡®Ü‡®ì‡®£‡®æ ‡®§‡©á data memory ‡®§‡©ã‡®Ç processor ‡®§‡©±‡®ï ‡®≤‡®ø‡®Ü‡®â‡®£‡®æ ‡•§
‡®§‡©á 3rd group ‡®π‡©Å‡©∞‡®¶‡®æ ‡®µ‡©Ä ‡®Ü‡®™‡®æ data read ‡®ï‡®∞‡®®‡®æ write ‡®ï‡®∞‡®®‡®æ ‡®§‡©á ‡®ï‡®à ‡®á‡®∏ ‡®§‡®∞‡®æ‡®Ç ‡®¶‡©á ‡®π‡©ã‡®∞ operation ‡®â‡®π‡®®‡®æ‡®Ç lines ‡®®‡©Ç‡©∞ group ‡®ï‡®∞ ‡®¶‡®ø‡©∞‡®¶‡©á ‡®Ü‡®Ç ‡®ú‡®ø‡®®‡©ç‡®π‡®æ‡®Ç ‡®¶‡®æ function ‡®§‡®æ‡®Ç different ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ï‡©ã‡®à line ‡®¶‡©±‡®∏ ‡®∞‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®Ü ‡®µ‡©Ä ‡®ï‡®¶‡©ã‡®Ç read ‡®ï‡®∞‡®®‡®æ ‡®ï‡®¶‡©Ä write ‡®ï‡®∞‡®®‡®æ but as a whole ‡®â‡®π control group ‡®π‡©Å‡©∞‡®¶‡®æ ‡®µ‡©Ä ‡®á‡®π  lines ‡®Ü ‡®ú‡®ø‡®π‡©ú‡©Ä‡®Ü‡®Ç control information ‡®®‡©Ç‡©∞ processor ‡®§‡©ã‡®Ç memory ‡®§‡©±‡®ï ‡®≤‡©à‡®ï‡©á ‡®ú‡®æ‡®Ç‡®¶‡©Ä‡®Ü‡®Ç‡•§ 

 Processor ‡®ï‡©ã‡®à ‡®µ‡©Ä ‡®ï‡©∞‡®Æ ‡®ú‡®ø‡®π‡©ú‡®æ ‡®Ü‡®™‡®æ ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®¶‡®ø‡©±‡®§‡®æ ‡®â‡®∏ ‡®®‡©Ç‡©∞ complete ‡®ï‡®∞‡®® ‡®≤‡®à ‡®á‡®π‡®®‡®æ‡®Ç 3 buses ‡®¶‡®æ use ‡®ï‡®∞‡®¶‡®æ‡•§
‡®á‡®π‡®®‡®æ‡®Ç ‡®¶‡©Ä help ‡®®‡®æ‡®≤ processor ‡®¶‡©±‡®∏‡®¶‡®æ ‡®µ‡©Ä ‡®ï‡®ø‡®∏ perfeller ‡®¶‡®æ memory ‡®¶‡®æ ‡®ï‡®ø‡®π‡©ú‡®æ ‡®π‡®ø‡©±‡®∏‡®æ active ‡®π‡©ã‡®£‡®æ ‡®ö‡®æ‡®π‡©Ä‡®¶‡®æ ‡®ú‡®ø‡®∏‡®§‡©ã data processor ‡®§‡©±‡®ï ‡®Ü‡®è ‡®§‡©á ‡®´‡®ø‡®∞ data processor ‡®§‡©ã‡®Ç memory ‡®§‡©±‡®ï ‡®Ü‡®è ‡®§‡©á ‡®ú‡®æ‡®Ç ‡®§‡®æ‡®Ç  processor data read ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ú‡®æ‡®Ç write ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡®æ ‡®á‡®π 3 buses ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü generally ‡®ï‡©ã‡®à ‡®µ‡©Ä ‡®ö‡©Ä‡®ú‡®º ‡®Ü‡®è‡®ó‡©Ä ‡®â‡®π ‡®á‡®π 3 buses ‡®µ‡®ø‡©±‡®ö‡©ã ‡®ï‡®ø‡®∏‡©á ‡®è‡®ï bus di category ‡®µ‡®ø‡©±‡®ö ‡®π‡©ã‡®è‡®ó‡©Ä 
----------------------------------------------------------
‚úîÔ∏è‡®ê‡®®‡®æ simple ‡®π‡©Å‡©∞‡®¶‡®æ computer ‡®¶‡®æ architecture ‡®™‡®∞ ‡®ú‡®ø‡®π‡©ú‡®æ ‡®â‡©±‡®™‡®∞ architecture ‡®¶‡®∏‡®ø‡®Ü ‡®á‡®π memory ‡®â‡©±‡®™‡®∞ ‡®π‡©Ä applicable ‡®π‡©Å‡©∞‡®¶‡®æ [ input output ] ‡®≤‡®à ‡®µ‡©Ä ‡®ï‡©Å‡©±‡®ù ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®π‡©Ä ‡®á‡®π architecture applicable ‡®π‡©à‡•§
----------------------------------------------------------
address bus == Address ‡®π‡®Æ‡©á‡®∏‡®º‡®æ processor ‡®§‡©ã‡®Ç memory ‡®§‡©±‡®ï ‡®ú‡®æ‡®Ç‡®¶‡®æ‡•§

Data bus ==  data ‡®ï‡®¶‡©á processor ‡®§‡©ã‡®Ç memory ‡®ú‡®æ‡®Ç ‡®ï‡®¶‡©á memory ‡®§‡©ã‡®Ç processor ‡®ï‡©ã‡®≤ ‡®ú‡®æ‡®Ç‡®¶‡®æ data bus is bidirctional.
 Control bus ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®¶‡©ã‡®µ‡©á‡®Ç ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®¶‡©Ä lines ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü ‡•§ ‡®ï‡®à lines processor ‡®§‡©ã‡®Ç memory ja peripheral devices (keyboard/mouse) ‡®§‡©±‡®ï ‡®ú‡®æ‡®Ç‡®¶‡©Ä‡®Ü‡®Ç ‡®§‡©á ‡®ï‡®à peripheral ‡®§‡©ã processor ‡®§‡©±‡®ï ‡®Ü‡®â‡®Ç‡®¶‡©Ä‡®Ü ‡•§
‡®ï‡®à ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®¶‡©á events ‡®π‡©Å‡©∞‡®¶‡©á ‡®Ü ‡®ú‡®ø‡®π‡©ú‡©á processor to ‡®¨‡®æ‡®π‡®∞ ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à ‡®ú‡®ø‡®®‡©ç‡®π‡®æ‡®Ç ‡®¨‡®æ‡®∞‡©á processor ‡®®‡©Ç‡©∞ ‡®¶‡©±‡®∏‡®£‡®æ ‡®π‡©Å‡©∞‡®¶‡®æ ( ‡®á‡©±‡®•‡©á data bus ‡®¶‡®æ use ‡®§‡®æ‡®Ç ‡®Ü‡®™‡®æ ‡®ï‡®∞ ‡®®‡®π‡©Ä ‡®∏‡®ï‡®¶‡©á ‡®ï‡®ø‡®ä‡®Ç‡®ï‡®ø data bus ‡®§‡®æ‡®Ç ‡®Ü‡®™‡®æ ‡®∏‡®ø‡®∞‡®´ ‡®â‡®¶‡©ã‡®Ç ‡®π‡©Ä use ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®ú‡®¶‡©ã‡®Ç Processor ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ ‡®¶‡©±‡®∏‡©á‡•§ ‡®Æ‡®§‡®≤‡®¨ data bus processor ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ grant ‡®ï‡®∞‡©Ç‡®ó‡®æ ‡•§ databus processor ‡®¶‡©Ä ‡®π‡©à‡•§) ‡®á‡®∏ ‡®≤‡®à ‡®ï‡©Å‡©±‡®ù signal ‡®ñ‡®æ‡®∏ ‡®è‡®∏‡©á ‡®ï‡©∞‡®Æ ‡®≤‡®à ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à ‡®ú‡®¶‡©ã‡®Ç ‡®ï‡©ã‡®à processor ‡®§‡©ã‡®Ç ‡®¨‡®æ‡®π‡®∞ ‡®ï‡©ã‡®à events ‡®π‡©ã‡®ú‡©á ‡®ú‡®ø‡®∏ ‡®¨‡®æ‡®∞‡©á processor ‡®®‡©Ç‡©∞ ‡®¶‡©±‡®∏‡®£‡®æ ‡®ú‡®º‡®∞‡©Ç‡®∞‡©Ä ‡®π‡©ã‡®µ‡©á ‡®â‡®∏ ‡®≤‡®à ‡®π‡©Å‡©∞‡®¶‡©á ‡®Ü‡•§
control bus processor ‡®§‡©ã ‡®á‡®π information convey ‡®ï‡®∞‡®¶‡©Ä ‡®Ü ‡®ï‡®ø processor ‡®á‡®∏ time memory read ‡®ï‡®∞‡®® ‡®µ‡®ø‡©±‡®ö ‡®ú‡®æ write ‡®ï‡®∞‡®® ‡®µ‡®ø‡©±‡®ö interseted
 ‡®π‡©à ‡®ï‡®ø‡®â‡®Ç‡®ï‡®ø memory ‡®®‡©Ç‡©∞ ‡®Ü‡®µ‡®¶‡®æ behaviour change ‡®ï‡®∞‡®®‡®æ ‡®π‡©à read ‡®ú‡®æ write ‡®µ‡®ø‡©±‡®ö ,‡®ú‡©á processor read ‡®ï‡®∞‡®®‡®æ ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡®æ ‡®§‡®æ‡®Ç cell ‡®§‡©ã data flow ‡®π‡©ã‡®è‡®ó‡®æ processor ‡®µ‡©±‡®≤ ‡®á‡©±‡®∏ ‡®µ‡®ø‡©±‡®ö memory & processor ‡®¶‡©ã‡®µ‡®æ‡®Ç ‡®¶‡®æ act ‡®π‡©à ( ‡®Ö‡®ó‡®∞ ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®®‡®æ ‡®π‡©ã‡®µ‡©á ‡®§‡®æ‡®Ç ‡®ï‡©∞‡®Æ ‡®ï‡®¶‡©á ‡®®‡®æ ‡®π‡©ã ‡®∏‡®ï‡©á ) ‡®™‡®∞ ‡®ï‡®¶‡©á-‡®ï‡®¶‡©á ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®π‡©ã ‡®®‡®π‡©Ä ‡®∏‡®ï‡®¶‡®æ( order fullfill ‡®®‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡®æ ‡®§‡©á order ‡®ï‡®ø‡®â fullfill ‡®®‡®π‡©Ä ‡®π‡©ã‡®á‡®Ü ‡®á‡®∏ ‡®¨‡®æ‡®∞‡©á processor ‡®¶‡©±‡®∏‡®ø‡®Ü ‡®ú‡®æ‡®µ‡©á ) { ‡®á‡®π ‡®ú‡©ã order fullfill nhi ‡®π‡©ã‡®á‡®Ü ‡®®‡®æ ‡®§‡®æ ‡®á‡®π address bus ‡®§‡©á ‡®®‡®æ‡®π‡©Ä data bus ‡®¶‡©á function ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®â‡®Ç‡®¶‡®æ ‡®ï‡®ø‡®â‡®ï‡®ø Data ‡®¶‡®æ ‡®§‡®æ‡®Ç flow ‡®π‡©ã‡®á‡®Ü ‡®π‡©Ä ‡®®‡®π‡©Ä } ‡®á‡®π control bus ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®Ü‡®â‡®Ç‡®¶‡®æ ‡®ú‡®¶‡©ã ‡®ï‡©ã‡®à peripheral devices processor ‡®®‡©Ç‡©∞ ‡®ï‡®π‡®ø‡©∞‡®¶‡©á ‡®Ü ‡®µ‡©Ä ‡®∏‡®æ‡®°‡©á ‡®®‡®æ‡®≤ ‡®á‡®π problem ‡®π‡©ã‡®ó‡©Ä ‡®ú‡®ø‡®∏‡®¶‡©Ä ‡®µ‡®ú‡©ç‡®π‡®æ ‡®®‡®æ‡®≤ ‡®á‡®π ‡®ï‡©∞‡®Æ ‡®®‡®π‡©Ä‡®Ç ‡®π‡©ã ‡®∏‡®ï‡®¶‡®æ ‡•§

     ‚ö´ Operation
‡®ï‡©ã‡®à ‡®µ‡©Ä operation ‡®≤‡®à ‡®á‡©±‡®ï operand[ data element ] ‡®ö‡®æ‡®π‡©Ä‡®¶‡®æ ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ú‡®ø‡®∏ ‡®â‡©±‡®§‡©á ‡®Ü‡®™‡®æ operation ‡®ï‡®∞‡®®‡®æ ‡®π‡©Å‡©∞‡®¶‡®æ ‡•§
‡®ú‡®ø‡®µ‡©á‡®Ç ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ ‡®µ‡©Ä address bus ‡®§‡©á precisely ‡®á‡©±‡®ï address ‡®π‡©Å‡©∞‡®¶‡®æ[ ‡®Æ‡®§‡®≤‡®¨ address bus ‡®á‡©±‡®ï memory location ‡®®‡©Ç‡©∞ point ‡®ï‡®∞ ‡®∞‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à ‡®á‡©±‡®ï time ‡®§‡©á ] ‡®ï‡®¶‡©á ‡®µ‡©Ä 2 address ‡®®‡®π‡©Ä ‡®π‡©ã ‡®∏‡®ï‡®¶‡©á , ‡®ú‡®¶‡©ã‡®Ç ‡®ï‡®¶‡©á ‡®Ü‡®™‡®£‡©á ‡®ï‡©ã‡®≤ 2 operand ‡®π‡©ã‡®£ ,‡®á‡©±‡®ï ‡®§‡®æ‡®Ç memory ‡®µ‡®ø‡©±‡®ö ‡®π‡©à (address bus ‡®®‡®æ‡®≤ precisely ‡®Æ‡©à ‡®á‡©±‡®ï address ‡®§‡®æ select ‡®ï‡®∞ ‡®≤‡®ø‡®Ü) ‡®ú‡©á ‡®ì‡®∏‡©á time ‡®Æ‡©à 2nd operand select ‡®®‡®π‡©Ä ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡®æ ‡®ú‡®ø‡®µ‡©á‡®Ç ‡®π‡©Ä ‡®Æ‡©à 2nd operand select ‡®ï‡®∞‡©Ç‡®ó‡®æ 1st operand Invisible ‡®π‡©ã‡®ú‡©Ç.. ‡®Æ‡©à‡®®‡©Ç‡©∞ operation ‡®§‡®æ ‡®ï‡®∞‡®®‡®æ ‡®™‡®∞ ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®ï‡®∞‡®æ( ‡®á‡®∏ ‡®≤‡®à ingeneral computer processor ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö registers ‡®π‡©Å‡©∞‡®¶‡©á ‡®Ü ) ‡®á‡®∏ ‡®≤‡®à ‡®á‡©±‡®ï operand read ‡®ï‡®∞‡®ï‡©á memory ‡®µ‡®ø‡©±‡®ö‡©ã register ‡®µ‡®ø‡©±‡®ö ‡®∞‡©±‡®ñ ‡®¶‡®ø‡©∞‡®¶‡©á ‡®Ü ‡®§‡©á 2nd operand ‡®®‡©Ç‡©∞ Memory ‡®µ‡®ø‡©±‡®ö‡©ã ‡®´‡©ú‡®¶‡©á ‡®Ü ‡®§‡©á operation ‡®π‡©ã ‡®ú‡®Ç‡®¶‡®æ ‡®ï‡®ø‡®â‡®ï‡®ø ‡®á‡©±‡®ï ‡®§‡®æ processor ‡®¶‡©á [ Register ]‡®Ö‡©∞‡®¶‡®∞ ‡®§‡©á ‡®¶‡©Ç‡®ú‡®æ [ Address Bus ‡®®‡©á point/address ‡®ï‡©Ä‡®§‡®æ] ‡®¨‡®æ‡®π‡®∞  accessable ‡®Ü [ at one time ‡®Ü‡®™‡®£‡©Ä-‡®Ü‡®™‡®£‡©Ä ‡®ú‡®ó‡©ç‡®π‡®æ ‡®Ü‡®™‡®æ ‡®®‡©Ç‡©∞ accessable ‡®π‡©à ] operation ‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ ‡®Æ‡©à ‡®á‡®∏‡®¶‡©á result ‡®®‡©Ç‡©∞ ‡®ï‡®ø‡®∏‡©á 3rd ‡®ú‡®ó‡©ç‡®π‡®æ ‡®§‡©á write ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡®æ ‡®ï‡®ø‡®â‡®ï‡®ø result ‡®®‡©Ç‡©∞ memory ‡®µ‡®ø‡©±‡®ö write ‡®ï‡®∞‡®® ‡®≤‡®à ‡®Æ‡©á‡®∞‡©á operand ‡®¶‡®æ visible ‡®π‡©ã‡®£‡®æ ‡®ú‡®∞‡©Ç‡®∞‡©Ä ‡®®‡®π‡©Ä Because ‡®Æ‡©á‡®∞‡®æ operation complete ‡®π‡©ã‡®ó‡®ø‡®Ü‡•§

 
Lec2‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è‚úîÔ∏è1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£1Ô∏è‚É£
 
     ‚ö´   recap of lec1     ‚ö´
Registers  operands ‡®®‡©Ç‡©∞ hold ‡®ï‡®∞‡®¶‡©á ‡®Ü
‡®ú‡®¶‡©ã ‡®Ü‡®™‡®æ ‡®ï‡©ã‡®à operation ‡®ï‡®∞‡®¶‡©á ‡®Ü ‡®§‡®æ 1 memory ‡®µ‡®ø‡©±‡®ö ‡®§‡©á 2 register ‡®µ‡®ø‡©±‡®ö ‡®∞‡©±‡®ñ‡®ï‡©á operation ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®π‡®æ ‡®á‡®π ‡®ï‡©∞‡®Æ/process ‡®ï‡©ã‡®à ‡®ú‡®ø‡®Ü‡®¶‡®æ ‡®ú‡®∞‡©Ç‡®∞‡©Ä ‡®®‡®π‡©Ä ‡®Ü ‡®ú‡®¶‡©ã ‡®Ü‡®™‡®£‡©á ‡®ï‡©ã‡®≤ ‡®â‡®∏ register ‡®¶‡©Ä value ‡®Ü ‡®ú‡®æ‡®Ç‡®¶‡©Ä ‡®Ü ‡®§‡®æ‡®Ç ‡®Ü‡®™‡®æ ‡®â‡®∏ register ‡®§‡©á [single handedly] ‡®µ‡©Ä operation ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®Ü

     üîµ  Accumulator Register  üîµ
 traditionaly ‡®∏‡®æ‡®∞‡©á mathematical & logical operations ‡®á‡®∏ register ‡®µ‡®ø‡©±‡®ö ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à‡•§ ‡®ï‡®ø‡®∏‡©á ‡®µ‡©Ä processor ‡®µ‡®ø‡©±‡®ö ‡®ú‡©ã ‡®π‡©Å‡©∞‡®¶‡®æ ‡®µ‡©Ä ‡®á‡®π 8,16,32,64 bit processor ‡®π‡©à ‡®á‡®π ‡®â‡®∏‡®¶‡©á accumulator ‡®¶‡©Ä size ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§

     üîµ  pointer/index/base  üîµ
‡®á‡®π data ‡®®‡©Ç‡©∞ hold ‡®®‡®π‡©Ä ‡®ï‡®∞‡®¶‡©á ‡®¨‡®≤‡®ï‡©Ä ‡®Ü‡®™‡®æ ‡®á‡®π‡®®‡®æ‡®Ç ‡®µ‡®ø‡©±‡®ö data/operand ‡®¶‡®æ address hold ‡®ï‡®∞‡®¶‡©á ‡®π‡®æ‡•§

     ‚ö´ General purpose registers ‚ö´
 ‡®π‡©Å‡®£ ‡®ú‡®ø‡®π‡©ú‡©á architecture ‡®¨‡®£‡®¶‡©á ‡®π‡©à ‡®ì‡®π‡®®‡®æ Register ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö hard-lining ‡®µ‡©Ä ‡®á‡®π register ‡®∏‡®ø‡®∞‡®´ ‡®á‡®π ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®á‡®π ‡®®‡®π‡©Ä ‡®â‡®π ‡®π‡®ü‡®æ ‡®¶‡®ø‡©±‡®§‡©Ä ,‡®ï‡®à operations ‡®∏‡®æ‡®∞‡©á ‡®π‡©Ä registers ‡®ï‡®∞‡®¶‡©á ‡®π‡©à ‡®ú‡®ø‡®µ‡©á simple operations , ‡®™‡®∞ ‡®´‡®ø‡®∞‡®µ‡©Ä ‡®ú‡®ø‡®µ‡©á‡®Ç Index register next instruction address hold ‡®ï‡®∞‡®¶‡©á ‡®Ü ‡®â‡®π ‡®∏‡®ø‡®∞‡®´ Index registers ‡®π‡©Ä ‡®ï‡®∞‡®¶‡©á ‡®π‡©à‡•§ ‡®ï‡®à ‡®ñ‡®æ‡®∏ registers ‡®π‡©à ‡®ú‡©ã ‡®ï‡©Ä ‡®ï‡®à instructions ‡®µ‡®ø‡©±‡®ö imolecit perameter ‡®π‡©Å‡©∞‡®¶‡©á [ ‡®ú‡®ø‡®π‡©ú‡©á perameter known/fixed ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à ‡®ú‡®ø‡®®‡©ç‡®π‡®æ ‡®®‡©Ç‡©∞ ‡®Ü‡®™‡®æ (‡®¶‡®∏‡®¶‡©á/ code ‡®®‡©Ä ) ‡®ï‡®∞‡®¶‡©á] (‡®ï‡®à ‡®µ‡®æ‡®∞ instructions ‡®µ‡®ø‡©±‡®ö accumlator implecit perameter ‡®π‡©Å‡©∞‡®¶‡®æ ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®¶‡©±‡®∏‡®£ ‡®¶‡©Ä ‡®≤‡©ã‡©ú ‡®®‡®π‡©Ä‡®Ç ‡®â‡®∏‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ ‡®π‡©Å‡©∞‡®¶‡®æ ‡®µ‡©Ä ‡®¶‡©Ç‡®ú‡®æ perameter accumlator ‡®µ‡®ø‡©±‡®ö ‡®π‡©Ä ‡®π‡©ã‡®è‡®ó‡®æ‡•§

     üîµ Flag/program status word register üîµ

----------------------------------------------------------
  ‚úîÔ∏è Function:          collection of different Boolean information each bit has an independent meaning.
----------------------------------------------------------

‡®á‡®π ‡®ï‡®à architecture ‡®µ‡®ø‡©±‡®ö ‡®á‡®∏‡®¶‡®æ size 8,16,32 bit [‡®õ‡©ã‡®ü‡®æ+‡®µ‡©±‡®°‡®æ] ‡®π‡©Å‡©∞‡®¶‡®æ ‡®π‡©à‡•§

     üîµ Program counter/instruction pointer                                         üîµ

----------------------------------------------------------
  ‚úîÔ∏è  Function:      Address of next instruction to be executed.
 address ‡®π‡©Å‡©∞‡®¶‡®æ memory ‡®µ‡®ø‡©±‡®ö ‡®§‡©á ‡®á‡®∏ register ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö memory cell ‡®¶‡®æ address ‡®π‡©Å‡©∞‡®¶‡®æ ‡®ú‡®ø‡©±‡®•‡©á ‡®â‡®π instruction ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à‡•§ ‡®â‡®π instruction memory ‡®µ‡®ø‡©±‡®ö ‡®π‡©Å‡©∞‡®¶‡©Ä ‡®π‡©à (‡®á‡©±‡®ï number ‡®¶‡©á form ‡®µ‡®ø‡©±‡®ö) ‡®ú‡®ø‡®µ‡©á 152 number ‡®Ü‡®™‡®£‡©á ‡®≤‡®à ‡®§‡®æ 152[‚ö´ ‡®á‡®∏ number ‡®®‡©Ç‡©∞ opcode ‡®ï‡®π‡®ø‡©∞‡®¶‡©á ‡®π‡©à ‚ö´] ‡®™‡®∞ processor ‡®≤‡®à ‡®á‡®π add ‡®¶‡©Ä instruction ‡®π‡©à ‡®á‡®∏ instruction ‡®§‡©ã ‡®á‡©±‡®ï ‡®§‡®æ processor ‡®®‡©Ç‡©∞ ‡®á‡®π ‡®™‡®§‡®æ ‡®≤‡©±‡®ó ‡®ú‡®æ‡®Ç‡®¶‡®æ ‡®µ‡©Ä processor ‡®®‡©á add ‡®ï‡®∞‡®®‡®æ ‡®§‡©á ‡®â‡®∏‡®¶‡©á operand ‡®ï‡®ø‡©±‡®•‡©á ‡®π‡©à ‡®§‡©á add ‡®ï‡®ø‡®∏‡®®‡©Ç‡©∞ ‡®ï‡®ø‡®∏ ‡®®‡®æ‡®≤ ‡®ï‡®∞‡®®‡®æ‡•§ instruction pointer opcode to opcode move ‡®ï‡®∞‡®¶‡®æ ‡®π‡©à ‡®ú‡®ø‡®∏ ‡®¶‡©Ä ‡®µ‡®ú‡©ç‡®π‡®æ ‡®®‡®æ‡®≤ program ‡®¶‡®æ flow ‡®¨‡®£‡®ø‡®Ü ‡®∞‡®π‡®ø‡©∞‡®¶‡®æ ‡®§‡©á basically program execute ‡®π‡©Å‡©∞‡®¶‡®æ ‡®∞‡®π‡®ø‡©∞‡®¶‡®æ‡•§
Example---------
      ‡®á‡©±‡®ï instruction ‡®®‡©Ç‡©∞ instruction pointer ‡®®‡©á ‡®ö‡©Å‡©±‡®ï‡®ø‡®Ü ‡®§‡©á processor ‡®®‡©á ‡®â‡®∏ instruction ‡®®‡©Ç‡©∞ understand ‡®ï‡©Ä‡®§‡®æ ‡®§‡©á ‡®â‡®∏‡®¶‡©á operand ‡®ö‡©±‡®ï‡©á maybe instruction ‡®¶‡©á ‡®§‡©Å‡®∞‡©∞‡®§ ‡®¨‡®æ‡®Ö‡®¶ ‡®™‡®è ‡®π‡©ã‡®£ , ‡®§‡©á ‡®ì‡®π operand ‡®™‡©ú‡©ç‡®π‡©á ‡®§‡©á operation ‡®ï‡©Ä‡®§‡®æ ‡®§‡©á ‡®â‡®∏‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ instruction pointer ‡®µ‡®ø‡©±‡®ö ‡®Ö‡®ó‡®≤‡©Ä instruction ‡®™‡®à ‡®π‡©à ‡®â‡®π instruction ‡®ö‡©±‡®ï‡©Ä
‡®â‡®∏‡®®‡©Ç‡©∞ understand ‡®ï‡©Ä‡®§‡®æ ‡®§‡©á ‡®â‡®∏‡®§‡©ã ‡®¨‡®æ‡®Ö‡®¶ ‡®â‡®∏ instruction ‡®¶‡©á operand ‡®ö‡©±‡®ï‡©á ‡®§‡©á operation ‡®ï‡©Ä‡®§‡®æ ‡®§‡©á ‡®á‡®π ‡®ï‡©∞‡®Æ ‡®≤‡®ó‡®æ‡®§‡®æ‡®∞ ‡®π‡©Å‡©∞‡®¶‡®æ ‡®∞‡®π‡®ø‡©∞‡®¶‡®æ‡•§ ----------------------------------------------------------

___________________________________
processor ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®¨‡®π‡©Å‡®§ instruction ‡®π‡©Å‡©∞‡®¶‡©Ä‡®Ü ‡®§‡©á ‡®á‡®π ‡®∏‡®æ‡®∞‡©Ä‡®Ü‡®Ç instructions ‡®¶‡©á ‡®Ü‡®™‡®æ group ‡®¶‡®ø‡©∞‡®¶‡©á ‡®π‡®æ‡•§
1Ô∏è‚É£ data movement class
2Ô∏è‚É£ arithmetic/logic instructions
3Ô∏è‚É£ program control instructions
‡®á‡®π group program ‡®¶‡©á execution ‡®®‡©Ç‡©∞ control ‡®ï‡®∞‡®¶‡®æ ‡®Æ‡®§‡®≤‡®¨ ‡®ú‡®ø‡®π‡©ú‡®æ instruction pointer register ‡®π‡©Å‡©∞‡®¶‡®æ ‡®â‡®π ‡®á‡©±‡®ï instruction ‡®§‡©á ‡®´‡®ø‡®∞ ‡®¶‡©Ç‡®ú‡©Ä instruction ‡®´‡®ø‡®∞ ‡®§‡©Ä‡®ú‡©Ä ‡®™‡®∞ ‡®ï‡®¶‡©á ‡®ï‡®¶‡©á ‡®Ü‡®™‡®æ ‡®á‡®π ‡®®‡®π‡©Ä‡®Ç ‡®ö‡®æ‡®π‡©Å‡©∞‡®¶‡©á ‡®µ‡©Ä ‡®Ü‡®™‡®£‡®æ program ‡®è‡®∏‡©á ‡®ü‡©ç‡®∞‡®π ‡®π‡©Ä ‡®ö‡®≤‡®¶‡®æ ‡®∞‡®π‡©á je ‡®á‡®π condition ‡®Ü‡®ú‡©á ‡®§‡®æ ‡®á‡®π ‡®ï‡©∞‡®Æ ‡®ï‡®∞‡®ï‡©á ‡®Ü‡®à
‡•§ ‡®á‡®π ‡®â‡®π instruction group ‡®π‡©à ‡®ú‡®ø‡®∏ ‡®®‡®æ‡®≤ instruction pointer ‡®ï‡®ø‡®∏ ‡®ú‡®ó‡©ç‡®π‡®æ ‡®§‡©á point ‡®ï‡®∞ ‡®∞‡®ø‡®π‡®æ ‡®π‡©à ‡®â‡®∏ instruction pointer ‡®¶‡©á content ‡®®‡©Ç‡©∞ control ‡®ï‡®∞‡®¶‡©Ä‡•§
4Ô∏è‚É£ special instructions
‡®á‡®π instruction processor ‡®®‡®æ‡®≤ ‡®™‡©∞‡®ó‡©á ‡®≤‡©à‡®£ ‡®Ü‡®≤‡©Ä‡®Ü instruction ‡®π‡©à ‡®ú‡®¶‡©ã‡®Ç ‡®Ü‡®™‡®æ processor ‡®¶‡©Ä state/behaviour ‡®µ‡®ø‡©±‡®ö change ‡®≤‡®ø‡®Ü‡®â‡®£ ‡®Ü‡®≤‡©Ä‡®Ü instruction ‡®π‡©à



     üîµüîµ
  üî¥ Internal architecture of IAPX 88 [ 16 but ] General Purpose        üî¥

‚ö´ General registers 
    16bit AX
________________
|     AH    |    AL    |
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
    8bit        8bit
‡®è‡®∏‡©á ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç BX,CX,DX ‡®π‡©Å‡©∞‡®¶‡©á‡•§ ‡®ú‡®æ‡®Ç ‡®Ü‡®™‡®æ ‡®∏‡®æ‡®∞‡©á registers nu 8-8bit ‡®¶‡®æ ‡®ú‡©ã‡©ú‡®æ [ in the form of AH & AL ] ‡®ú‡®æ 16bit ‡®¶‡©á single.

üî¥ ‡®á‡®π‡®®‡®æ register ‡®¶‡©á name sequence ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®π‡©à [ AX,BX,CX,DX ]‡®§‡©á ‡®®‡®æ‡®≤ ‡®¶‡©Ä ‡®®‡®æ‡®≤ ‡®á‡®π‡®®‡®æ ‡®¶‡©á ‡®Æ‡®§‡®≤‡®¨ ‡®µ‡©Ä ‡®π‡©à  üî¥

AX A-->accumlator register
BX B-->base register(‡®á‡®∏ register ‡®¶‡®æ memory access ‡®ï‡®∞‡®® ‡®¶‡®æ ‡®ï‡©∞‡®Æ ‡®π‡©à)
CX C-->counter register(‡®á‡®∏ register ‡®µ‡®ø‡©±‡®ö ‡®ï‡®à Instruction ‡®á‡®∏ ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®¶‡©Ä‡®Ü ‡®ú‡©ã ‡®ï‡©Ä automatic count ‡®®‡®æ‡®≤ ‡®ö‡®≤‡®¶‡©Ä‡®Ü ‡®ú‡®ø‡®®‡©ç‡®π‡®æ ‡®¶‡®æ count ‡®á‡®∏ register ‡®µ‡®ø‡©±‡®ö ‡®∞‡©±‡®ñ‡®ø‡®Ü ‡®ú‡®æ‡®Ç‡®¶‡®æ)
DX D--> destination register( ‡®á‡®π [ IO ] ‡®¶‡®æ destination )

‚ö´ Pointer/index/base
‡®á‡®π ‡®∏‡®æ‡®∞‡©á [ 16bit ] ‡®¶‡©á ‡®π‡©à ‡®á‡®π ‡®Ö‡©±‡®ß‡©á-‡®Ö‡©±‡®ß‡©á ‡®®‡®π‡©Ä use ‡®π‡©ã ‡®∏‡®ï‡®¶‡©á ‡®á‡®π ‡®™‡©Ç‡®∞‡©á 16bit ‡®¶‡©á use ‡®π‡©ã‡®£‡®ó‡©á ‡®®‡®π‡©Ä ‡®§‡®æ‡®Ç ‡®®‡®π‡©Ä use ‡®π‡©ã‡®£‡®ó‡©á‡•§

SI SI--> Source index
DI DI--> Destination index
‡®á‡®π ‡®ú‡®ø‡®Ü‡®¶‡®æ‡®§‡®∞ operations ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö memory access ‡®ï‡®∞‡®® ‡®µ‡®ø‡©±‡®ö use ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡©à‡•§ ‡®ñ‡®æ‡®∏ ‡®ï‡®∞‡®ï string Instruction ‡®¶‡©á ‡®µ‡®ø‡©±‡®ö ‡®ú‡®ø‡©±‡®•‡©á ‡®Ü‡®™‡®æ memory read ‡®ï‡®∞ ‡®∞‡®π‡©á ‡®π‡©Å‡©∞‡®¶‡©á ‡®π‡®æ‡®Ç ‡®â‡©±‡®•‡©á SI ‡®§‡©á ‡®ú‡®ø‡©±‡®•‡©á write ‡®ï‡®∞‡®¶‡©á ‡®π‡®æ ‡®â‡®•‡©á DI .
IP IP --> instruction pointer ‡®ú‡®ø‡®Ü‡®¶‡®æ‡®§‡®∞ ‡®á‡®π register ‡®Ü‡®™‡®£‡©á control ‡®µ‡®ø‡©±‡®ö ‡®®‡®π‡©Ä ‡®π‡©Å‡©∞‡®¶‡®æ‡•§ ‡®á‡®∏ register ‡®®‡®æ‡®≤ ‡®ï‡©ã‡®à methematics/memory access ‡®®‡®π‡©Ä ‡®π‡©à ‡®∏‡®ï‡®¶‡©Ä ‡®á‡®∏ register ‡®®‡©Ç‡©∞ processor ‡®Ü‡®™‡®£‡©á control ‡®®‡®æ‡®≤ ‡®á‡®∏ register ‡®®‡©Ç‡©∞ ‡®Ü‡®™‡®£‡©á ‡®ï‡®æ‡®¨‡©Ç ‡®µ‡®ø‡©±‡®ö ‡®∞‡©±‡®ñ‡®¶‡®æ ‡®π‡©à processor ‡®®‡©Ç‡©∞ ‡®™‡®§‡®æ ‡®π‡©à ‡®á‡®∏‡®®‡©Ç‡©∞ ‡®ï‡®ø‡©±‡®•‡©á-‡®ï‡®ø‡©±‡®•‡©á ‡®ï‡®ø‡®µ‡©á‡®Ç ‡®≤‡©á ‡®ï‡©á ‡®ú‡®æ‡®£‡®æ‡•§
SP SP--> stack pointer ‡®á‡®π ‡®µ‡©Ä ‡®á‡©±‡®ï ‡®§‡®∞‡©ç‡®π‡®æ‡®Ç ‡®¶‡®æ memory pointer ‡®π‡©à ‡®Æ‡®ó‡®∞ ‡®á‡®π ‡®µ‡©Ä ‡®Ü‡®™‡®æ ‡®ñ‡©Å‡®¶ ‡®®‡®π‡©Ä use ‡®ï‡®∞ ‡®∏‡®ï‡®¶‡©á ‡®ï‡©Å‡®ù instructions ‡®π‡©à ‡®ú‡©ã ‡®ï‡©Ä ‡®á‡®∏‡®®‡©Ç‡©∞ use ‡®ï‡®∞‡®¶‡©Ä‡®Ü
BP BP--> base pointer ‡®á‡®π ‡®µ‡©Ä pointer register ‡®π‡©à memory access ‡®ï‡®∞‡®® ‡®≤‡®à use ‡®π‡©Å‡©∞‡®¶‡®æ ‡®™‡®∞ ‡®á‡©±‡®ï ‡®ñ‡®æ‡®∏ region ‡®¶‡©Ä memory access use ‡®π‡©Å‡©∞‡®¶‡®æ

‚ö´ Flag register 
________________________
| D | I | T | S | Z | A | P | C |
‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî
C - carry
P - parity 
A - auxiliary carry
Z - zero bit
S - sign bit
T - trap flag
I - interrupt flag
D- Direction flag



